from typing import List, Tuple

from ib_notifications.constants.enums import NotificationCategory
from ib_notifications.dtos.notification_dto import NotificationDTO
from ib_notifications.exceptions.custom_exceptions import InvalidNotificationCategory
from ib_notifications.interactors.dtos import UserNotificationsQueryDTO
from ib_notifications.interactors.presenters.user_notifications_presenter_v2 import \
    UserNotificationsPresenterInterfaceV2
from ib_notifications.interactors.storages.storage_interface import \
    StorageInterface


class GetUserNotificationsInteractorV2:

    def __init__(self, storage: StorageInterface):
        self.storage = storage

    def get_user_notifications_response(
        self, query_dto: UserNotificationsQueryDTO,
        presenter: UserNotificationsPresenterInterfaceV2
    ):
        try:
            notifications_dtos, total_count = self.get_user_notifications_v2(query_dto)
        except InvalidNotificationCategory as err:
            return presenter.raise_invalid_notification_category_enum(err)
        response = presenter.get_user_notifications_response(
            notification_dtos=notifications_dtos, total_count=total_count)
        return response

    def get_user_notifications_v2(
        self, query_dto: UserNotificationsQueryDTO
    ) -> Tuple[List[NotificationDTO], int]:
        notification_category = (
            NotificationCategory.ALL.value if not query_dto.notification_category
            else query_dto.notification_category
        )
        query_dto.notification_category = notification_category

        user_notifications_ids, total_count = self._get_user_notifications(query_dto)
        notifications_dtos = self.storage.get_user_notifications_details_bulk(
            user_notifications_ids=user_notifications_ids
        )
        return notifications_dtos, total_count

    def _get_user_notifications(
        self, query_dto: UserNotificationsQueryDTO
    ) -> Tuple[List[int], int]:
        notification_category = query_dto.notification_category
        all_notifications = notification_category == NotificationCategory.ALL.value
        unread_notifications = notification_category == NotificationCategory.UNREAD.value

        if all_notifications:
            return self.storage.get_all_user_notifications(
                user_id=query_dto.user_id,
                offset=query_dto.offset,
                limit=query_dto.limit
            )
        elif unread_notifications:
            return self.storage.get_user_unread_notifications(
                user_id=query_dto.user_id,
                offset=query_dto.offset,
                limit=query_dto.limit
            )
        else:
            # noinspection PyTypeChecker
            raise InvalidNotificationCategory(query_dto.notification_category)
