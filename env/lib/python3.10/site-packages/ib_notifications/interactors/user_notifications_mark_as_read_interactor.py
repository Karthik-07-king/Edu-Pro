from typing import List

from ib_notifications.interactors.storages.storage_interface import \
    StorageInterface


class MarkUserNotificationsAsReadInteractor:

    def __init__(self, storage: StorageInterface):
        self.storage = storage

    def mark_user_notifications_as_read(
            self, user_id: str, notification_ids: List[str]):
        self._validate_notification_ids(notification_ids=notification_ids)
        self._validate_given_notifications_belong_to_user(
            user_id=user_id, notification_ids=notification_ids
        )

        self.storage.mark_user_notifications_as_read(
            user_id=user_id, notification_ids=notification_ids)

    def _validate_notification_ids(self, notification_ids: List[str]):
        valid_notification_ids = self.storage.get_valid_notification_ids(
            notification_ids=notification_ids
        )
        valid_notification_ids_strings = [
            str(valid_notification_id)
            for valid_notification_id in valid_notification_ids
        ]
        invalid_notification_ids = [
            notification_id
            for notification_id in notification_ids
            if notification_id not in valid_notification_ids_strings
        ]
        if invalid_notification_ids:
            from ib_notifications.exceptions.custom_exceptions import \
                InvalidNotificationIds
            raise InvalidNotificationIds(notification_ids)

    def _validate_given_notifications_belong_to_user(
            self, notification_ids: List[str], user_id: str):

        valid_user_notification_ids = \
            self.storage.get_valid_user_notification_ids(
                notification_ids=notification_ids, user_id=user_id)

        valid_user_notification_ids_strings = [
            str(valid_user_notification_id)
            for valid_user_notification_id in valid_user_notification_ids
        ]
        invalid_user_notification_ids = [
            notification_id
            for notification_id in notification_ids
            if notification_id not in valid_user_notification_ids_strings
        ]
        if invalid_user_notification_ids:
            from ib_notifications.exceptions.custom_exceptions import \
                InvalidUserNotificationIds
            raise InvalidUserNotificationIds(invalid_user_notification_ids)
