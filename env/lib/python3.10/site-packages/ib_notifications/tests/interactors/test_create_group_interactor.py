from mock import create_autospec

from ib_notifications.interactors.create_group_interactor import \
    CreateGroupInteractor
from ib_notifications.interactors.presenters.presenter_interface import \
    PresenterInterface
from ib_notifications.interactors.storages.storage_interface import \
    StorageInterface


class TestCreateGroupInteractor:
    def test_create_group_return_group_id(self):
        name = "group 1"
        group_id = 1
        expected_result = {
            "group_id": group_id
        }

        presenter_mock = create_autospec(PresenterInterface)
        storage_mock = create_autospec(StorageInterface)
        interactor = CreateGroupInteractor(storage=storage_mock)

        presenter_mock.create_group_response.return_value = expected_result
        storage_mock.create_group.return_value = group_id

        actual_result = interactor.create_group_response(
            presenter=presenter_mock,
            name=name,
        )

        presenter_mock.create_group_response.assert_called_once_with(
            group_id=group_id)
        storage_mock.create_group.assert_called_once_with(
            name=name
        )
        assert expected_result["group_id"] == actual_result["group_id"]
