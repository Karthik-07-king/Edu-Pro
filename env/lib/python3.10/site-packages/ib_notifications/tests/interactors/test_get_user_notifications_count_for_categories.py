import factory
import mock
import pytest

from ib_notifications.constants.enums import NotificationCategory
from ib_notifications.tests.factories.interactor_dtos import \
    NotificationCategoryCountDTOFactory


class TestGetUserNotificationsCountForCategoriesInteractor:

    @pytest.fixture
    def storage_mock(self):
        from ib_notifications.interactors.storages.storage_interface import \
            StorageInterface

        return mock.create_autospec(StorageInterface)

    @pytest.fixture
    def interactor(self, storage_mock):
        from ib_notifications.interactors.get_user_notifications_count_for_categories \
            import GetUserNotificationsCountForCategoriesInteractor

        return GetUserNotificationsCountForCategoriesInteractor(
            storage=storage_mock
        )

    def test_with_valid_data(
            self, interactor, storage_mock
    ):
        # Arrange
        user_id = "user_1"
        categories = [
            NotificationCategory.UNREAD.value,
            NotificationCategory.ALL.value
        ]

        unread_notifications_count = 2
        all_notifications_count = 3

        storage_mock.get_unread_notifications_count.return_value = unread_notifications_count
        storage_mock.get_all_notifications_count.return_value = all_notifications_count

        expected_response = NotificationCategoryCountDTOFactory.create_batch(
            size=len(categories),
            category=factory.Iterator(categories),
            count=factory.Iterator([
                unread_notifications_count,
                all_notifications_count
            ])
        )

        # Act
        response = interactor.get_user_notifications_count_for_categories(
            user_id=user_id, categories=categories
        )

        # Assert
        assert response == expected_response
        storage_mock.get_unread_notifications_count.assert_called_once_with(
            user_id=user_id
        )
        storage_mock.get_all_notifications_count.assert_called_once_with(
            user_id=user_id
        )
