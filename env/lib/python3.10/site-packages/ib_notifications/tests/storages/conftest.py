import pytest

from ib_notifications.constants.enums import DeviceType
from ib_notifications.models import Group, GroupUser, UserDeviceToken
from ib_notifications.models import Notification, UserNotification

USER_ID = "1"
notification_message_dto = [
    {
        "title": "System Update",
        "message": "update is 4 mb",
        "extra_data": "you can get better experience",
        "notification_type": "update"
    },
    {
        "title": "System Update2",
        "message": "update is 5 mb",
        "extra_data": "you can get better experience!",
        "notification_type": "update2"
    }
]

GROUP_USER = [
    {
        "group_id": 1,
        "user_id": '1'
    },
    {
        "group_id":1,
        "user_id": '2'
    }
]


@pytest.fixture
def notifications():
    return [
        Notification.objects.create(
            title=notification_message_dto["title"],
            message=notification_message_dto["message"],
            notification_type=notification_message_dto["notification_type"],
            extra_data=notification_message_dto["extra_data"]
        )
        for notification_message_dto in notification_message_dto
    ]


@pytest.fixture
def user_notifications(notifications):
    return [
        UserNotification.objects.create(
            user_id=USER_ID,
            notification_id=notification.id,
        )
        for notification in notifications
    ]


@pytest.fixture
def user_id():
    return USER_ID


@pytest.fixture
def create_group():
    group = Group.objects.create(name="Active Users")
    return group


@pytest.fixture
def create_users_in_group(create_group):
    group_users = [GroupUser(group_id=GROUP_USER[0]["group_id"],
                             user_id=GROUP_USER[0]["user_id"]),
                   GroupUser(group_id=GROUP_USER[1]["group_id"],
                             user_id=GROUP_USER[1]["user_id"])]
    GroupUser.objects.bulk_create(group_users)
    group_users = GroupUser.objects.all()
    return group_users


@pytest.fixture
def create_user_device_token():
    user_device_tokens = [
        UserDeviceToken(user_id='1', device_id=1,token="token1",
                        device_type=DeviceType.ANDROID.value),
        UserDeviceToken(user_id='2', device_id=2,token="token2",
                        device_type=DeviceType.ANDROID.value),
        UserDeviceToken(user_id='2', device_id=4,token="token3",
                        device_type=DeviceType.IOS.value),
        UserDeviceToken(user_id='3', device_id=3,token="token4",
                        device_type=DeviceType.ANDROID.value),
    ]
    UserDeviceToken.objects.bulk_create(user_device_tokens)
    device_tokens = UserDeviceToken.objects.all()
    return device_tokens
