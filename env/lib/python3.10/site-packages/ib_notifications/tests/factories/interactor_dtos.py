import factory

from ib_notifications.constants.enums import DeviceType, NotificationCategory
from ib_notifications.dtos.cm_token_with_user_id_dto import UserIdWithCMToken
from ib_notifications.dtos.notification_message_dto import NotificationMessageDTO, AndroidDeviceDTO
from ib_notifications.interactors.dtos import NotificationCategoryCountDTO


class UserIdWithCMTokenFactory(factory.Factory):
    class Meta:
        model = UserIdWithCMToken

    user_id = factory.sequence(lambda n: f"user_{n}")
    cm_token = factory.sequence(lambda n: f"cm_token_{n}")
    device_type = DeviceType.WEB.value


class AndroidDeviceDTOFactory(factory.Factory):
    class Meta:
        model = AndroidDeviceDTO

    channel_id = factory.sequence(lambda n: f"channel_{n}")


class NotificationMessageDTOFactory(factory.Factory):
    class Meta:
        model = NotificationMessageDTO

    title = factory.sequence(lambda n: f"title_{n}")
    message = factory.sequence(lambda n: f"message_{n}")
    notification_type = factory.sequence(lambda n: f"notification_type_{n}")
    extra_data = factory.sequence(lambda n: "{'user_id': 'user_id'}")
    url = factory.sequence(lambda n: f"url_{n}")
    notification_id = factory.sequence(lambda n: f"notification_{n}")
    fcm_android_details = factory.SubFactory(AndroidDeviceDTOFactory)



class NotificationCategoryCountDTOFactory(factory.Factory):

    class Meta:
        model = NotificationCategoryCountDTO
    category = NotificationCategory.ALL.value
    count = factory.sequence(lambda n: n)
