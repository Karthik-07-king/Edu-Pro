import dataclasses
import datetime

import factory

from ib_notifications.models import UserNotification
from ib_notifications.models.notification import Notification
from ib_notifications.models.user_device_token import UserDeviceToken


@dataclasses.dataclass
class UserDeviceTokenFactory(factory.django.DjangoModelFactory):
    class Meta:
        model = UserDeviceToken

    user_id = factory.sequence(lambda counter: "user_{}".format(counter))
    device_id = factory.sequence(lambda counter: "device_{}".format(counter))
    device_type = factory.Iterator(["WEB", "ANDROID", "IOS"])
    token = factory.sequence(lambda counter: "token_{}".format(counter))


@dataclasses.dataclass
class NotificationFactory(factory.django.DjangoModelFactory):
    class Meta:
        model = Notification

    id = factory.sequence(
        lambda counter: "059373d4-c877-47f5-873c-2f744f37605{}".format(
            counter))
    created_at = datetime.datetime(2020, 5, 6, 10, 55, 40)
    title = factory.sequence(lambda counter: "title_{}".format(counter))
    message = factory.sequence(lambda counter: "message_{}".format(counter))
    notification_type = factory.sequence(lambda counter: "notification_type_{}".format(counter))


@dataclasses.dataclass
class UserNotificationFactory(factory.django.DjangoModelFactory):
    class Meta:
        model = UserNotification

    notification = factory.SubFactory(NotificationFactory)
    user_id = factory.sequence(lambda counter: "user_{}".format(counter))
    read_at = None
    is_deleted = False
