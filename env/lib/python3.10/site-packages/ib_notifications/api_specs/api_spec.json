{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_notifications/",
  "info": {
    "version": "1.0.0",
    "title": "IB Notifications",
    "description": "Notifications API Specifications"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://www.example.com",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "Notification": {
      "type": "object",
      "properties": {
        "notification_id": {
          "type": "string"
        },
        "read_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "extra_data": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        }
      },
      "required": [
        "notification_id",
        "created_at",
        "title",
        "message",
        "notification_type"
      ]
    },
    "Device": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string"
        },
        "device_type": {
          "type": "string",
          "enum": [
            "WEB",
            "ANDROID",
            "IOS"
          ]
        }
      },
      "required": [
        "device_id",
        "device_type"
      ]
    },
    "DeviceWithToken": {
      "allOf": [
        {
          "$ref": "#/definitions/Device"
        },
        {
          "type": "object",
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "required": [
            "token"
          ]
        }
      ]
    }
  },
  "parameters": {
    "LimitParameter": {
      "name": "limit",
      "description": "limit parameter",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "int64"
    },
    "OffsetParameter": {
      "name": "offset",
      "description": "offset parameter",
      "in": "query",
      "required": true,
      "type": "integer",
      "format": "int64"
    },
    "NotificationsCategoryParameter": {
      "name": "notifications_category",
      "description": "Notifications Category",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "ALL", "UNREAD"
      ],
      "default": "ALL"
    },
    "DeviceIdParameter": {
      "name": "device_id",
      "description": "device id parameter",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "DeviceTypeParameter": {
      "name": "device_type",
      "description": "device type parameter",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "WEB",
        "ANDROID",
        "IOS"
      ]
    },
    "NotificationIdParameter": {
      "name": "notification_id",
      "description": "notification id parameter",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "CreateOrUpdateCloudMessageTokenParameter": {
      "description": "create or update cloud message token for given user_id, device id, device_type and token",
      "in": "body",
      "name": "create",
      "required": true,
      "schema": {
        "$ref": "#/definitions/DeviceWithToken"
      }
    }
  },
  "responses": {
    "UserNotificationsResponse": {
      "description": "list of user notifications response",
      "schema": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Notification"
            }
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "notifications",
          "total_count"
        ]
      }
    },
    "UserNotificationsResponseV2": {
      "description": "list of user notifications V2 response",
      "schema": {
        "type": "object",
        "properties": {
          "notifications": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Notification"
            }
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "notifications",
          "total_count"
        ]
      }
    },
    "UserNotificationsV2NotFoundResponse": {
      "description": "User notifications v2 not found response",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "INVALID_NOTIFICATION_CATEGORY_ENUM"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "UnreadNotificationsCountResponse": {
      "description": "user unread notifications count",
      "schema": {
        "type": "object",
        "properties": {
          "unread_notifications_count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "unread_notifications_count"
        ]
      }
    },
    "MarkUserNotificationsAsReadNotFoundResponse": {
    "description":"mark all user notifications as read not found response",
       "schema":{
          "type":"object",
          "properties":{
             "response":{
                "type":"string"
             },
             "http_status_code":{
                "type":"integer"
             },
             "res_status":{
                "type":"string",
                "enum":[
                   "USER_DOES_NOT_HAVE_UNREAD_NOTIFICATIONS"
                ]
             }
          },
          "required":[
             "response",
             "http_status_code",
             "res_status"
          ]
       }
    },
    "MarkAUserNotificationAsReadNotFoundResponse": {
    "description":"mark a user notification as read not found response",
       "schema":{
          "type":"object",
          "properties":{
             "response":{
                "type":"string"
             },
             "http_status_code":{
                "type":"integer"
             },
             "res_status":{
                "type":"string",
                "enum":[
                  "INVALID_NOTIFICATION_ID",
                  "INVALID_USER_NOTIFICATION_ID",
                   "NOTIFICATION_HAS_ALREADY_READ_BY_USER"
                ]
             }
          },
          "required":[
             "response",
             "http_status_code",
             "res_status"
          ]
       }
    },
    "DeleteNotificationNotFoundResponse": {
    "description":"delete user notification not found response",
       "schema":{
          "type":"object",
          "properties":{
             "response":{
                "type":"string"
             },
             "http_status_code":{
                "type":"integer"
             },
             "res_status":{
                "type":"string",
                "enum":[
                  "INVALID_NOTIFICATION_ID",
                  "INVALID_USER_NOTIFICATION_ID"
                ]
             }
          },
          "required":[
             "response",
             "http_status_code",
             "res_status"
          ]
       }
    }
  },
  "paths": {
    "/user/notifications/v1/": {
      "get": {
        "summary": "list of user notifications",
        "operationId": "get_user_notifications",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/OffsetParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserNotificationsResponse"
          }
        }
      }
    },
    "/user/notifications/v2/": {
      "get": {
        "summary": "list of user notifications",
        "operationId": "get_user_notifications_v2",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/OffsetParameter"
          },
          {
            "$ref": "#/parameters/NotificationsCategoryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserNotificationsResponseV2"
          },
          "404": {
            "$ref": "#/responses/UserNotificationsV2NotFoundResponse"
          }
        }
      }
    },
    "/user/unread/notifications/count/v1/": {
      "get": {
        "summary": "user unread notifications count",
        "operationId": "get_unread_notifications_count",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UnreadNotificationsCountResponse"
          }
        }
      }
    },
    "/notifications/mark_as_read/v1/": {
      "put": {
        "summary": "mark unread notifications of user as read",
        "operationId": "mark_unread_notifications_as_read",
        "security": [
          {
            "oauth": [
              "write",
              "update"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/responses/MarkUserNotificationsAsReadNotFoundResponse"
          }
        }
      }
    },
    "/cloud_message_token/v1/": {
      "post": {
        "summary": "create or update cloud message token for user device",
        "description": "Create or Update cloud message token for user device",
        "operationId": "create_or_update_cloud_message_token",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CreateOrUpdateCloudMessageTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created or update cloud message token"
          }
        }
      },
      "delete": {
        "summary": "delete cloud message token for user device",
        "description": "Deletes cloud message token for user device.",
        "operationId": "delete_cloud_message_token_for_user_device",
        "security": [
          {
            "oauth": [
              "delete"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DeviceIdParameter"
          },
          {
            "$ref": "#/parameters/DeviceTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully delete cloud message token"
          }
        }
      }
    },
    "/notification/mark_as_read/v1/": {
      "put": {
        "summary": "mark unread notification of user as read",
        "operationId": "mark_notification_as_read",
        "security": [
          {
            "oauth": [
              "write",
              "update"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/NotificationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "$ref": "#/responses/MarkAUserNotificationAsReadNotFoundResponse"
          }
        }
      }
    },
    "/notification/delete/v1/": {
      "delete": {
        "summary": "Delete notification of user",
        "operationId": "delete_user_notification",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/NotificationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted Successfully"
          },
          "404": {
            "$ref": "#/responses/DeleteNotificationNotFoundResponse"
          }
        }
      }
    }
  }
}
