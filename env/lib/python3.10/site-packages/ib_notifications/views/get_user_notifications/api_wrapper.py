from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_notifications.interactors.get_user_notifications_interactor import \
    GetUserNotificationsInteractor
from ib_notifications.presenters.presenter_implementation import \
    PresenterImplementation
from ib_notifications.storages.storage_implementation import \
    StorageImplementation
from ib_notifications.utils.parameter_validator import ParameterValidator
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    user_id = kwargs['user_dto'].user_id
    query_params = kwargs['request_query_params']
    offset = query_params.offset
    limit = query_params.limit

    parameter_validator = ParameterValidator()
    parameter_validator.validate_limit(limit=limit)
    parameter_validator.validate_offset(offset=offset)

    storage = StorageImplementation()
    presenter = PresenterImplementation()
    interactor = GetUserNotificationsInteractor(storage=storage)

    return interactor.get_user_notifications_response(
        user_id=user_id, offset=offset, limit=limit, presenter=presenter)
