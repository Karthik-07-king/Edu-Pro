from dsu.common.exceptions import Forbidden, NotFound, ExpectationFailed, \
    BadRequest
from dsu.runtime.constants.exceptions import Unauthorized


def handle_interface_exception(response):

    if not response:
        return

    if type(response) != dict:

        return

    http_status_code = response.get('http_status_code', None)
    if http_status_code == 403:
        raise Forbidden(response.get("response", ""), res_status=False)
    elif http_status_code == 404:
        raise NotFound(response.get("response", ""), res_status=False)
    elif http_status_code == 417:
        raise ExpectationFailed(response.get("response", ""), res_status=False)
    elif http_status_code == 401:
        raise Unauthorized(response.get("response", ""), res_status=response["res_status"])
    elif http_status_code == 400:
        raise BadRequest(response.get("response", ""), res_status=False)
    else:
        return
