from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.interactors.login.login_with_twitter import TwitterLoginDTO, \
    LoginWithTwitter
from ib_users.storages.user_social_account_sql_storage import \
    UserSocialAccountsSQLStorage
from ib_users.third_party.social_account.twitter_account import TwitterAccount
from ib_users.utils.views.login_controllers_common import \
    validate_inputs_and_get_auth_tokens
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    from ib_users.storages.user_login_device_details_sql_storage import \
        UserLoginDeviceDetailsSQLStorage
    request_data = kwargs['request_data']
    twitter_access_token = request_data["twitter_access_token"]
    twitter_secret_token = request_data["twitter_secret_token"]
    device_id = request_data.get("device_id", None)
    twitter_login_dto = TwitterLoginDTO(twitter_access_token,
                                        twitter_secret_token)

    login_interactor = LoginWithTwitter(
        storage=UserSocialAccountsSQLStorage(), twitter_service=TwitterAccount(),
        user_login_device_details_storage=UserLoginDeviceDetailsSQLStorage())

    return validate_inputs_and_get_auth_tokens(login_interactor,
                                               twitter_login_dto,
                                               device_id=device_id)
