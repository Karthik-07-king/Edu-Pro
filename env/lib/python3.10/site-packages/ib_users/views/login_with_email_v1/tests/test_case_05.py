"""
Success Case
"""
from django.test import override_settings

from ib_users.models import UserUniqueLoginDevice
from ib_users.utils.custom_test_utils import CustomTestUtils
from . import APP_NAME, OPERATION_NAME, REQUEST_METHOD, URL_SUFFIX

REQUEST_BODY = """
{
    "email": "username001@company.com",
    "password": "Qwerty123!",
    "device_id": "Device2"
}
"""

TEST_CASE = {
    "request": {
        "path_params": {},
        "query_params": {},
        "header_params": {},
        "securities": {},
        "body": REQUEST_BODY,
    },
}


class TestCase05LoginWithEmailV1APITestCase(CustomTestUtils):
    app_name = APP_NAME
    operation_name = OPERATION_NAME
    request_method = REQUEST_METHOD
    url_suffix = URL_SUFFIX
    test_case_dict = TEST_CASE

    def setUp(self):
        from ib_users.models import UserAccount
        user_account = UserAccount.objects.create_user(
            user_id='0e006a83-9150-4ac1-927d-c3c5dd387581',
            username="username001", password="Qwerty123!",
            email="username001@company.com")
        self.populate_user_social_account()

    @override_settings(RESTRICT_USER_TO_SINGLE_LOGIN_SESSION="TRUE")
    @override_settings(ENABLE_USER_DEVICES_INFORMATION=True)
    def test_case(self):
        self.default_test_case()
        from ib_users.models import UserUniqueLoginDevice
        user_unique_login_devices = UserUniqueLoginDevice.objects.all()

        user_unique_login_devices_data = [
            {
                "user_id": str(each.user_account_id),
                "device_id": each.device_id,
            }
            for each in user_unique_login_devices
        ]

        self.assert_match_snapshot(
            user_unique_login_devices_data, "user_unique_login_devices_data")


