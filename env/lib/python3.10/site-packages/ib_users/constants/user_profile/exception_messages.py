from ib_users.constants.user_profile import enums


INVALID_COURSE_COMPLETION_STATUS = (
    "Invalid Course Completion Status. Valid values are {}".format(
        enums.CourseCompletionStatus.get_list_of_values()),
    "INVALID_COURSE_COMPLETION_STATUS"
)

INVALID_SCORE_TYPE = (
    "Invalid score type. Valid values are {}".format(enums.ScoreType.get_list_of_values()),
    "INVALID_SCORE_TYPE"
)

INVALID_SCORE = (
    "Please provide a valid score",
    "INVALID_SCORE"
)


INVALID_SCORE_FOR_CGPA_SCORE_TYPE = (
    "Please provide a valid CGPA",
    "INVALID_SCORE_FOR_CGPA_SCORE_TYPE"
)


INVALID_SCORE_FOR_PERCENTAGE_SCORE_TYPE = (
    "Please provide a valid percentage",
    "INVALID_SCORE_FOR_PERCENTAGE_SCORE_TYPE"
)

INVALID_YEAR_OF_COMPLETION = (
    "Invalid year of completion",
    "INVALID_YEAR_OF_COMPLETION"
)


INVALID_SSC_BOARD_NAME_ENUM = (
    "Invalid ssc board name enum. Valid values are {}".format(enums.SSCBoardName.get_list_of_values()),
    "INVALID_SSC_BOARD_NAME_ENUM"
)


INVALID_DEGREE_TYPE = (
    "Invalid degree type. Valid values are {}".format(enums.DegreeType.get_list_of_values()),
    "INVALID_DEGREE_TYPE"
)


INVALID_NO_OF_BACKLOGS = (
    "Invalid number of backlogs. Number of backlogs should be greater than 0",
    "INVALID_NO_OF_BACKLOGS"
)


INVALID_START_YEAR = (
    "Invalid start year",
    "INVALID_START_YEAR"
)


INVALID_END_YEAR = (
    "Invalid end year",
    "INVALID_END_YEAR"
)


END_YEAR_SHOULD_BE_GREATER_THAN_START_YEAR = (
    "End year should be later than the start year",
    "END_YEAR_SHOULD_BE_GREATER_THAN_START_YEAR"
)


INVALID_GUARDIAN_RELATION = (
    "Invalid Guardian Relation. Valid values are {}".format(
        enums.GuardianRelation.get_list_of_values()),
    "INVALID_GUARDIAN_RELATION"
)


INVALID_PHONE_NUMBER = (
    "Please provide a valid phone number",
    "INVALID_PHONE_NUMBER"
)


INVALID_NO_OF_YEARS_EXPERIENCE_IN_IT_SECTOR = (
    "Invalid number of years experience in it sector",
    "INVALID_NO_OF_YEARS_EXPERIENCE_IN_IT_SECTOR"
)


INVALID_NO_OF_YEARS_EXPERIENCE_IN_NON_IT_SECTOR = (
    "Invalid number of years experience in non it sector",
    "INVALID_NO_OF_YEARS_EXPERIENCE_IN_NON_IT_SECTOR"
)


END_DATE_SHOULD_BE_GREATER_THAN_START_DATE = (
    "End date should be later than the start date",
    "END_DATE_SHOULD_BE_GREATER_THAN_START_DATE"
)


INVALID_ADDRESS_TYPE = (
    "Invalid address type. Valid values are {}".format(enums.AddressType.get_list_of_values()),
    "INVALID_ADDRESS_TYPE"
)


INVALID_PREFERRED_LANGUAGES = (
    "Invalid preferred languages. Valid values are {}".format(
        enums.Language.get_list_of_values()),
    "INVALID_PREFERRED_LANGUAGES"
)


INVALID_WHATSAPP_MOBILE_NUMBER = (
    "Please provide a valid phone number",
    "INVALID_WHATSAPP_MOBILE_NUMBER"
)


INVALID_SOCIAL_PROVIDERS = (
    "Invalid social providers. Valid values are {}".format(
        enums.SocialProvider.get_list_of_values()),
    "INVALID_SOCIAL_PROVIDERS"
)


INVALID_NO_OF_MONTHS_FOR_NOTICE_PERIOD = (
    "Invalid number of months for notice period",
    "INVALID_NO_OF_MONTHS_FOR_NOTICE_PERIOD"
)


INVALID_CTC = (
    "Invalid ctc. Valid values are {}".format(enums.CTC.get_list_of_values()),
    "INVALID_CTC"
)


INVALID_HIGHEST_EDUCATION_COURSE_TYPE = (
    "Invalid highest education course type. Valid values are {}".format(
        enums.CourseType.get_list_of_values()),
    "INVALID_HIGHEST_EDUCATION_COURSE_TYPE"
)


DATE_OF_BIRTH_SHOULD_BE_LESS_THAN_CURRENT_DATE = (
    "Your year of birth is incorrect",
    "DATE_OF_BIRTH_SHOULD_BE_LESS_THAN_CURRENT_DATE"
)


INVALID_LINKED_PROFILE_LINK = (
    "Please provide a valid LinkedIn Profile link",
    "INVALID_LINKED_PROFILE_LINK"
)


INVALID_TWITTER_PROFILE_LINK = (
    "Please provide a valid Twitter Profile link",
    "INVALID_TWITTER_PROFILE_LINK"
)
