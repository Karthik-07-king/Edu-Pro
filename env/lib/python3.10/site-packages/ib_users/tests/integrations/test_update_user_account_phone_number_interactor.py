import datetime
import uuid

import freezegun
import pytest
from django.test import override_settings

from ib_users import models
from ib_users.constants import otp_verification_constants
from ib_users.tests.factories.interface_dtos import \
    UpdateUserAccountPhoneNumberDTOFactory
from ib_users.tests.factories import storage_dtos as storage_dtos_factories
from ib_users.tests.factories import models as model_factories


@pytest.mark.django_db
class TestUpdateUserAccountPhoneNumberInteractor:

    @pytest.fixture
    def interactor(self):
        from ib_users.storages.user_accounts_sql_storage \
            import UserAccountsSQLStorage
        from ib_users.interactors\
            .update_user_account_phone_number_interactor \
            import UpdateUserAccountPhoneNumberInteractor
        return UpdateUserAccountPhoneNumberInteractor(UserAccountsSQLStorage())

    @pytest.fixture
    def setup_data(self):
        user_id = str(uuid.uuid4())
        phone_number = '9988776600'
        update_user_account_phone_number_dto = \
            UpdateUserAccountPhoneNumberDTOFactory(
                user_id=user_id,
                phone_number=phone_number
            )

        user_account = model_factories.UserAccountFactory(user_id=user_id)

        return user_id, update_user_account_phone_number_dto, user_account

    @override_settings(
        UPDATE_USER_ACCOUNT_PHONE_NUMBER_INTERVAL_IN_DAYS=1,
        VERIFY_PHONE_NUMBER_OTP_CALL_TEMPLATE='template',
        SWAP_PHONE_NUMBERS_WHILE_UPDATING=False
    )
    def test_when_user_already_has_verified_update_log_and_completed_interval(
            self, interactor, setup_data):
        user_id, update_user_account_phone_number_dto,\
            user_account = setup_data

        model_factories.UpdateUserAccountPhoneNumberLogFactory(
            user_account_id=user_id,
            verification_status=otp_verification_constants.VerificationStatus.VERIFIED.value,
            verified_datetime=datetime.datetime(2022, 5, 25))

        user_account_phone_dto = storage_dtos_factories.\
            UserAccountUpdatePhoneDetailsLogDTOFactory(
                user_id=user_id,
                new_phone_number=
                update_user_account_phone_number_dto.phone_number,
                new_country_code=
                update_user_account_phone_number_dto.country_code,
                old_phone_number=user_account.phone_number,
                old_country_code=user_account.country_code,
                failure_remarks=None,
                change_reason=
                update_user_account_phone_number_dto.reason_to_change,
                verification_status=otp_verification_constants.
                VerificationStatus.VERIFICATION_IN_PROGRESS.value,
                verified_datetime=None
            )

        interactor.update_user_account_phone_number(
            update_user_account_phone_number_dto)

        user_account_phone_number_log = models \
            .UpdateUserAccountPhoneNumberLog.objects. \
            filter(user_account_id=user_id). \
            order_by('-creation_datetime')[0]

        assert str(user_account_phone_number_log.user_account_id) == \
               user_account_phone_dto.user_id
        assert user_account_phone_number_log.new_phone_number == \
               user_account_phone_dto.new_phone_number
        assert user_account_phone_number_log.new_country_code == \
               user_account_phone_dto.new_country_code
        assert user_account_phone_number_log.old_phone_number == \
               user_account_phone_dto.old_phone_number
        assert user_account_phone_number_log.old_country_code == \
               user_account_phone_dto.old_country_code
        assert user_account_phone_number_log.change_reason == \
               user_account_phone_dto.change_reason
        assert user_account_phone_number_log.verification_status == \
               user_account_phone_dto.verification_status
        assert user_account_phone_number_log.failure_remarks == \
               user_account_phone_dto.failure_remarks

    @override_settings(
        VERIFY_PHONE_NUMBER_OTP_CALL_TEMPLATE='template',
        SWAP_PHONE_NUMBERS_WHILE_UPDATING=False
    )
    @pytest.mark.parametrize('verification_status', [
        otp_verification_constants.VerificationStatus
                             .VERIFICATION_IN_PROGRESS.value,
        otp_verification_constants.VerificationStatus.VERIFICATION_FAILED.value
    ])
    def test_when_user_already_has_verified_update_log_and_not_verified(
            self, verification_status, interactor, setup_data):
        user_id, update_user_account_phone_number_dto, \
            user_account = setup_data

        user_account_phone_dto = storage_dtos_factories. \
            UserAccountUpdatePhoneDetailsLogDTOFactory(
                user_id=user_id,
                new_phone_number=
                update_user_account_phone_number_dto.phone_number,
                new_country_code=
                update_user_account_phone_number_dto.country_code,
                old_phone_number=user_account.phone_number,
                old_country_code=user_account.country_code,
                failure_remarks=None,
                change_reason=
                update_user_account_phone_number_dto.reason_to_change,
                verification_status=otp_verification_constants.
                VerificationStatus.VERIFICATION_IN_PROGRESS.value
            )

        interactor.update_user_account_phone_number(
            update_user_account_phone_number_dto)

        user_account_phone_number_log = models \
            .UpdateUserAccountPhoneNumberLog.objects. \
            filter(user_account_id=user_id). \
            order_by('-creation_datetime')[0]

        assert str(user_account_phone_number_log.user_account_id) == \
               user_account_phone_dto.user_id
        assert user_account_phone_number_log.new_phone_number == \
               user_account_phone_dto.new_phone_number
        assert user_account_phone_number_log.new_country_code == \
               user_account_phone_dto.new_country_code
        assert user_account_phone_number_log.old_phone_number == \
               user_account_phone_dto.old_phone_number
        assert user_account_phone_number_log.old_country_code == \
               user_account_phone_dto.old_country_code
        assert user_account_phone_number_log.change_reason == \
               user_account_phone_dto.change_reason
        assert user_account_phone_number_log.verification_status == \
               user_account_phone_dto.verification_status
        assert user_account_phone_number_log.failure_remarks == \
               user_account_phone_dto.failure_remarks

    @override_settings(
        VERIFY_PHONE_NUMBER_OTP_CALL_TEMPLATE='template',
        SWAP_PHONE_NUMBERS_WHILE_UPDATING=False
    )
    def test_when_user_does_not_have_any_update_logs(
            self, interactor, setup_data):
        user_id, update_user_account_phone_number_dto, \
            user_account = setup_data

        update_user_account_phone_number_dto.send_otp_through = \
            otp_verification_constants.SendOTPThrough.CALL.value

        user_account_phone_dto = storage_dtos_factories. \
            UserAccountUpdatePhoneDetailsLogDTOFactory(
                user_id=user_id,
                new_phone_number=
                update_user_account_phone_number_dto.phone_number,
                new_country_code=
                update_user_account_phone_number_dto.country_code,
                old_phone_number=user_account.phone_number,
                old_country_code=user_account.country_code,
                failure_remarks=None,
                change_reason=
                update_user_account_phone_number_dto.reason_to_change,
                verification_status=otp_verification_constants.
                VerificationStatus.VERIFICATION_IN_PROGRESS.value
            )

        interactor.update_user_account_phone_number(
            update_user_account_phone_number_dto)

        user_account_phone_number_log = models \
            .UpdateUserAccountPhoneNumberLog.objects. \
            filter(user_account_id=user_id). \
            order_by('-creation_datetime')[0]

        assert str(user_account_phone_number_log.user_account_id) == \
               user_account_phone_dto.user_id
        assert user_account_phone_number_log.new_phone_number == \
               user_account_phone_dto.new_phone_number
        assert user_account_phone_number_log.new_country_code == \
               user_account_phone_dto.new_country_code
        assert user_account_phone_number_log.old_phone_number == \
               user_account_phone_dto.old_phone_number
        assert user_account_phone_number_log.old_country_code == \
               user_account_phone_dto.old_country_code
        assert user_account_phone_number_log.change_reason == \
               user_account_phone_dto.change_reason
        assert user_account_phone_number_log.verification_status == \
               user_account_phone_dto.verification_status
        assert user_account_phone_number_log.failure_remarks == \
               user_account_phone_dto.failure_remarks
