import pytest

from ib_users.tests.factories import storage_dtos, models


@pytest.mark.django_db
class TestGetUserGuardianDetailsInteractor:

    @pytest.fixture
    def user_profile_storage(self):
        from ib_users.storages.user_profile_sql_storage import \
            UserProfileSQLStorage

        return UserProfileSQLStorage()

    @pytest.fixture()
    def user_account_storage(self):
        from ib_users.storages.user_accounts_sql_storage import UserAccountsSQLStorage

        return UserAccountsSQLStorage()

    @pytest.fixture()
    def interactor(self, user_profile_storage, user_account_storage):
        from ib_users.interactors.user_profile. \
            get_user_guardian_details_interactor import \
            GetUserGuardianDetailsInteractor
        return GetUserGuardianDetailsInteractor(
            user_profile_storage=user_profile_storage,
            user_account_storage=user_account_storage)

    def test_given_invalid_user_raises_exception(
            self, interactor):
        # Arrange
        from ib_users.exceptions.user_account_exceptions import \
            InvalidUserIdException

        user_id = "5fd64953-7c9a-4e34-9f46-d9ad554dfe81"

        # Act
        with pytest.raises(InvalidUserIdException):
            interactor.get_user_guardian_details(user_id=user_id)

    def test_given_valid_user_id_return_user_guardian_details(
            self, interactor):
        # Arrange
        models.UserGuardianDetailsFactory.reset_sequence()

        user_id = "5fd64953-7c9a-4e34-9f46-d9ad554dfe81"
        user_account = models.UserAccountFactory(user_id=user_id)
        user_guardian_details = models.UserGuardianDetailsFactory(
            user_account=user_account, email="durga@gmail.co")

        expected_response = storage_dtos.UserGuardianDetailsDTOFactory(
            user_id=user_id,
            first_name=user_guardian_details.first_name,
            last_name=user_guardian_details.last_name,
            relation=user_guardian_details.relation,
            other_relation=user_guardian_details.other_relation,
            job_role_id=user_guardian_details.job_role_id,
            job_role_name=user_guardian_details.job_role_name,
            other_job_role_name=user_guardian_details.other_job_role_name,
            email=user_guardian_details.email,
            country_code=user_guardian_details.country_code,
            phone_number=user_guardian_details.phone_number,
            have_whatsapp=user_guardian_details.have_whatsapp,
            whatsapp_mobile_country_code=user_guardian_details.whatsapp_mobile_country_code,
            whatsapp_mobile_number=user_guardian_details.whatsapp_mobile_number)

        # Act
        actual_response = interactor.get_user_guardian_details(user_id=user_id)

        # Assert
        assert actual_response == expected_response
