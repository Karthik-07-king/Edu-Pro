import typing
from ib_users.interfaces import dtos as interface_dtos


class UserCurrentProfessionalDetailsDoesNotExistException(Exception):
    pass


class UserIntermediateDetailsDoesNotExistException(Exception):
    pass


class UserWorkExperienceDetailsDoesNotExistException(Exception):
    pass


class InvalidUserProfessionalSkillIdsException(Exception):
    def __init__(self, user_professional_skills_ids: typing.List[str]):
        self.user_professional_skills_ids = user_professional_skills_ids


class UserContactDetailsDoesNotExistException(Exception):
    pass


class UserGuardianDetailsDoesNotExistsException(Exception):
    pass


class UserSSCDetailsDoesNotExistException(Exception):
    pass


class InvalidUserSocialProfileIdsException(Exception):
    def __init__(self, social_profile_ids: typing.List[str]):
        self.social_profile_ids = social_profile_ids


class InvalidUserDegreeDetailsIdsException(Exception):
    def __init__(self, degree_details_ids: typing.List[str]):
        self.degree_details_ids = degree_details_ids


class InvalidUserCompanyDetailsIdsException(Exception):
    def __init__(self, user_company_ids: typing.List[str]):
        self.user_company_ids = user_company_ids


class InvalidEducationDetailsException(Exception):

    def __init__(self, invalid_education_details: interface_dtos.InvalidEducationDetailsDTO):
        self.invalid_education_details = invalid_education_details


class InvalidGuardianDetailsException(Exception):
    def __init__(self, invalid_guardian_details: interface_dtos.InvalidUserGuardianDetailsDTO):
        self.invalid_guardian_details = invalid_guardian_details


class InvalidProfessionalDetailsException(Exception):
    def __init__(self, invalid_professional_details: interface_dtos.InvalidProfessionalDetailsDTO):
        self.invalid_professional_details = invalid_professional_details


class InvalidAddressDetailsException(Exception):
    def __init__(self, invalid_address_details: typing.List[interface_dtos.InvalidAddressDetailsDTO]):
        self.invalid_address_details = invalid_address_details


class InvalidUserProfileDetailsException(Exception):
    def __init__(self, invalid_profile_details: interface_dtos.InvalidUpdateUserProfileDetailsDTO):
        self.invalid_profile_details = invalid_profile_details


class UserProfileDetailsDoesNotExistException(Exception):
    pass


class InvalidUserIdsException(Exception):

    def __init__(self, user_ids: typing.List[str]):
        self.user_ids = user_ids


class InvalidSocialProviderException(Exception):
    pass


class InvalidSocialProfileLinkException(Exception):
    pass
