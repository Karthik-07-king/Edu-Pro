# write your ib_users settings

import base64
import os

DEFAULT_OAUTH_SCOPES = 'read write'
DEFAULT_ACCESS_TOKEN_EXPIRY_IN_SECONDS = int(
    os.environ.get('DEFAULT_ACCESS_TOKEN_EXPIRY_IN_SECONDS', '3600')
)

DEFAULT_OAUTH_APPLICATION_NAME = 'ib-users'
DEFAULT_OAUTH_CLIENT_ID = "client_id"
DEFAULT_OAUTH_CLIENT_SECRET = "client_secret"

SMS_SERVICE_PROVIDER = os.environ.get('SMS_SERVICE_PROVIDER', 'MSG91')
DEFAULT_SMS_SENDER_ID = os.environ.get('DEFAULT_SMS_SENDER_ID', '')

MSG91_AUTH_KEY = os.environ.get('MSG91_AUTH_KEY', '')
MSG91_OTP_TEMPLATE_ID = os.environ.get('MSG91_OTP_TEMPLATE_ID', '')

SMS_COUNTRY_USERNAME = os.environ.get('SMS_COUNTRY_USERNAME', '')
SMS_COUNTRY_PASSWORD = os.environ.get('SMS_COUNTRY_PASSWORD', '')

# Email Settings
EMAIL_BACKEND = os.environ.get("EMAIL_BACKEND", 'django_smtp_ssl.SSLEmailBackend')
EMAIL_HOST = os.environ.get('EMAIL_HOST', '')
EMAIL_PORT = os.environ.get('EMAIL_PORT', '465')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = base64.b64decode(
    os.environ.get('EMAIL_HOST_PASSWORD', '')
).decode("utf-8")
EMAIL_USE_TLS = str(os.environ.get("EMAIL_USE_TLS", ""))
DEFAULT_SENDER_EMAIL = os.environ.get('DEFAULT_SENDER_EMAIL', '')
DEFAULT_SENDER_NAME = str(
    os.environ.get("DEFAULT_SENDER_NAME", DEFAULT_SENDER_EMAIL)
)

TIME_INTERVAL_FOR_GENERATED_USER_CODE_IN_SECONDS = int(os.environ.get(
    "TIME_INTERVAL_FOR_GENERATED_USER_CODE_IN_SECONDS", "120"))

TWITTER = {
    'app_key': os.environ.get('TWITTER_APP_KEY', ''),
    'app_secret': os.environ.get('TWITTER_APP_SECRET', '')
}

RESTRICT_USER_TO_SINGLE_LOGIN_SESSION = os.environ.get(
    'RESTRICT_USER_TO_SINGLE_LOGIN_SESSION', 'FALSE'
)

ENABLE_PASSWORD_VALIDATIONS = eval(os.environ.get(
    'ENABLE_PASSWORD_VALIDATIONS', 'True'))

DSU_RAISE_EXCEPTION_FOR_API_RESPONSE_STATUS_CODE = eval(os.environ.get(
    'DSU_RAISE_EXCEPTION_FOR_API_RESPONSE_STATUS_CODE', 'False'))

OTP_MAX_RETRIES_COUNT = int(os.environ.get("OTP_MAX_RETRIES_COUNT", "3"))

SHOULD_SEND_OTP_TO_VERIFIED_EMAIL_FOR_PHONE_NUMBER_LOGIN = eval(os.environ.get(
    "SHOULD_SEND_OTP_TO_VERIFIED_EMAIL_FOR_PHONE_NUMBER_LOGIN", 'True'))

RESET_PASSWORD_LINK_DLT_TEMPLATE_ID = str(
    os.environ.get("RESET_PASSWORD_LINK_DLT_TEMPLATE_ID", ""))


OTP_LENGTH = int(os.environ.get("OTP_LENGTH", "6"))

# Twilio Configuration
TWILIO_ACCOUNT_SID = str(os.environ.get("TWILIO_ACCOUNT_SID", ""))
TWILIO_AUTH_TOKEN = str(os.environ.get("TWILIO_AUTH_TOKEN"))
TWILIO_VIRTUAL_PHONE_NUMBER = str(os.environ.get("TWILIO_VIRTUAL_PHONE_NUMBER", ""))
USE_TWILIO_FOR_INTERNATIONAL_NUMBERS = eval(os.environ.get("USE_TWILIO_FOR_INTERNATIONAL_NUMBERS", "False"))
TWILIO_LOGIN_TEMPLATE_ID = str(os.environ.get("TWILIO_LOGIN_TEMPLATE_ID", ""))
TWILIO_UPDATE_PHONE_NUMBER_TEMPLATE_ID = str(os.environ.get(
    'TWILIO_UPDATE_PHONE_NUMBER_TEMPLATE_ID', ""))
TWILIO_MESSAGE_TEMPLATE_ID_TO_VERIFY_PHONE_NUMBER = str(
    os.environ.get("TWILIO_MESSAGE_TEMPLATE_ID_TO_VERIFY_PHONE_NUMBER", ""))


VERIFY_PHONE_NUMBER_OTP_CALL_TEMPLATE = str(
    os.environ.get("VERIFY_PHONE_NUMBER_OTP_CALL_TEMPLATE", "Your phone number verification otp is {otp}"))
LOGIN_OTP_CALL_TEMPLATE = str(
    os.environ.get("LOGIN_OTP_CALL_TEMPLATE", "Your login otp is {otp}"))


UPDATE_USER_ACCOUNT_PHONE_NUMBER_INTERVAL_IN_DAYS = int(os.environ.get(
    'UPDATE_USER_ACCOUNT_PHONE_NUMBER_INTERVAL_IN_DAYS', "0"))
SWAP_PHONE_NUMBERS_WHILE_UPDATING = eval(os.environ.get(
    "SWAP_PHONE_NUMBERS_WHILE_UPDATING", 'False'))

# user Login Device log
ENABLE_USER_DEVICES_INFORMATION = eval(
    os.environ.get("ENABLE_USER_DEVICES_INFORMATION", "False"))

# FingerprintJs configurations
FINGERPRINT_JS_WEBHOOK_USERNAME = str(
    os.environ.get("FINGERPRINT_JS_WEBHOOK_USERNAME", ""))

FINGERPRINT_JS_WEBHOOK_PASSWORD = str(
    os.environ.get("FINGERPRINT_JS_WEBHOOK_PASSWORD", ""))


# Login Email with otp configurations
SUBJECT_FOR_LOGIN_WITH_EMAIL_OTP = str(
    os.environ.get("SUBJECT_FOR_LOGIN_WITH_EMAIL_OTP", "OTP to login"))

TEMPLATE_FOR_LOGIN_WITH_EMAIL_OTP = str(
    os.environ.get("TEMPLATE_FOR_LOGIN_WITH_EMAIL_OTP", "Your otp to login is {{otp_token}}"))
