from ib_users.exceptions.invalid_phone_number_exception import \
    InvalidPhoneNumberException
from ib_users.interactors.validators.phone_number_validator import \
    PhoneNumberValidator


class PhoneNumberValidatorImpl(PhoneNumberValidator):
    def validate(self, phone_number_DTO):
        phone_number = phone_number_DTO.phone_number
        country_code = phone_number_DTO.country_code
        phone_number_str = "+{country_code}{phone_number}".format(
            country_code=country_code, phone_number=phone_number)

        try:
            from phonenumbers import parse
            self._validate_phone_number_str(
                phone_number_str=phone_number_str
            )
        except ModuleNotFoundError or ImportError:
            self._validate_phone_number_v2(
                phone_number=phone_number, country_code=country_code)

    @staticmethod
    def _get_parsed_phone_number_object(phone_number_str):
        from phonenumbers import NumberParseException
        from phonenumbers import parse

        try:
            return parse(phone_number_str, None)
        except NumberParseException:
            InvalidPhoneNumberException.raise_for_phone_number_string_parse_failure(
                phone_number_str=phone_number_str
            )

    @classmethod
    def _validate_phone_number_str(cls, phone_number_str):
        from phonenumbers import is_valid_number

        parsed_phone_number_obj = cls._get_parsed_phone_number_object(
            phone_number_str=phone_number_str
        )

        is_phone_number_valid = is_valid_number(parsed_phone_number_obj)

        if not is_phone_number_valid:
            InvalidPhoneNumberException.raise_for_phone_number_validation_failure(
                phone_number_str=phone_number_str
            )

    @classmethod
    def _validate_phone_number_v2(cls, phone_number, country_code):
        import re
        pattern = re.compile("^[+0-9]*$")
        if pattern.match(str(country_code)) is None or \
                pattern.match(str(phone_number)) is None:
            phone_number_str = "+{country_code}{phone_number}".format(
                country_code=country_code, phone_number=phone_number
            )
            InvalidPhoneNumberException.\
                raise_for_phone_number_validation_failure(
                    phone_number_str=phone_number_str)
