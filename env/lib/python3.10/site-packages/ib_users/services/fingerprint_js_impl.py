import json
import logging
import typing

from ib_users.interactors.create_user_fingerprint_js_webhook_details_interactor \
    import CreateFingerprintJsWebhookDetailsInteractor
from ib_users.interactors.dtos import FingerprintJsWebhookDetailsDTO
from ib_users.interactors.third_party.fingerprint_js import FingerprintJs
from ib_users.presenters.create_fingerprint_js_webhook_details_presenter_impl \
    import CreateFingerprintJsWebhookDetailsPresenterImpl
from ib_users.storages.fingerprint_js_storage_impl import \
    FingerprintJsStorageImpl

logger = logging.getLogger(__name__)


class FingerprintJsImpl(FingerprintJs):

    def create_fingerprint_js_webhook_details(
            self, headers: typing.Dict[str, typing.Any],
            request_payload: typing.Dict[str, typing.Any]):
        fingerprint_js_storage = FingerprintJsStorageImpl()
        presenter = CreateFingerprintJsWebhookDetailsPresenterImpl()

        interactor = CreateFingerprintJsWebhookDetailsInteractor(
            fingerprint_js_storage)

        password, username = self._get_username_and_password(headers)

        fingerprint_js_webhook_details_dto = FingerprintJsWebhookDetailsDTO(
            username=username,
            password=password,
            request_id=request_payload.get("requestId", ""),
            webhook_data=json.dumps(request_payload))

        response = interactor.create_fingerprint_js_webhook_details_wrapper(
            fingerprint_js_webhook_details_dto, presenter)

        return response

    @staticmethod
    def _get_username_and_password(headers):
        import base64

        username, password = "", ""
        authorization = headers.get("Authorization", "")
        credentials = None

        if authorization:
            try:
                credentials = base64.b64decode(
                    authorization.split(" ")[1]).decode("utf-8")
                credentials = credentials.split(":")
            except Exception as err:
                logger.error(err)
                return username, password

        if credentials and len(credentials) == 2:
            username, password = credentials

        return password, username
