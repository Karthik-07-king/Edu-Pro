# Generated by Django 2.2.1 on 2021-12-23 14:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ib_users.utils.generate_uuid
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('ib_users', '0014_auto_20211214_1949'),
    ]

    operations = [
        migrations.AddField(
            model_name='userprofile',
            name='cover_page_url',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='last_name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='UserWorkExperienceDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('no_of_years_experience_in_it_sector', models.FloatField(blank=True, null=True)),
                ('no_of_years_experience_in_non_it_sector', models.FloatField(blank=True, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSSCDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('board_name_enum', models.CharField(blank=True, choices=[('CBSE', 'CBSE'), ('ICSE', 'ICSE'), ('STATE_BOARD', 'STATE_BOARD'), ('IGCSE', 'IGCSE'), ('IB', 'IB')], max_length=256, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('year_of_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfessionalSkills',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('skill_id', models.CharField(blank=True, max_length=64, null=True)),
                ('skill_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_skill_name', models.CharField(blank=True, max_length=256, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserIntermediateDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('intermediate_course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('intermediate_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_intermediate_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('year_of_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGuardianDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('relation', models.CharField(blank=True, choices=[('FATHER', 'FATHER'), ('MOTHER', 'MOTHER'), ('BROTHER', 'BROTHER'), ('SISTER', 'SISTER'), ('AUNT', 'AUNT'), ('UNCLE', 'UNCLE'), ('TEACHER', 'TEACHER'), ('SPOUSE', 'SPOUSE'), ('COUSIN', 'COUSIN'), ('OTHER', 'OTHER')], max_length=50, null=True)),
                ('other_relation', models.CharField(blank=True, max_length=256, null=True)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('have_whatsapp', models.BooleanField(blank=True, null=True)),
                ('whatsapp_mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_mobile_country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDegreeDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('degree_type', models.CharField(blank=True, choices=[('BACHELORS', 'BACHELORS'), ('MASTERS', 'MASTERS')], max_length=50, null=True)),
                ('course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('department_id', models.CharField(blank=True, max_length=64, null=True)),
                ('department_name', models.CharField(blank=True, max_length=256, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('start_year', models.PositiveIntegerField(blank=True, null=True)),
                ('end_year', models.PositiveIntegerField(blank=True, null=True)),
                ('no_of_backlogs', models.PositiveIntegerField(blank=True, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('institute_pin_code', models.CharField(blank=True, max_length=50, null=True)),
                ('institute_city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('expected_date_to_clear_backlogs', models.DateField(blank=True, null=True)),
                ('institute_district_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_district_name', models.CharField(blank=True, max_length=256, null=True)),
                ('institute_state_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_state_name', models.CharField(blank=True, max_length=256, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCurrentProfessionalDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('highest_education_course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('highest_education_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserContactDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('whatsapp_mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_mobile_country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('i_want_to_receive_updates_directly_on_whatsapp', models.BooleanField(blank=True, null=True)),
                ('user_account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCompanyDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('company_id', models.CharField(blank=True, max_length=64, null=True)),
                ('company_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_company_name', models.CharField(blank=True, max_length=256, null=True)),
                ('company_city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('company_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('is_currently_working_in_this_company', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('ctc', models.CharField(blank=True, choices=[('LESS_THAN_THREE_LPA', 'LESS_THAN_THREE_LPA'), ('THREE_TO_FOUR_POINT_FIVE_LPA', 'THREE_TO_FOUR_POINT_FIVE_LPA'), ('FOUR_POINT_FIVE_TO_SIX_LPA', 'FOUR_POINT_FIVE_TO_SIX_LPA'), ('SIX_TO_NINE_LPA', 'SIX_TO_NINE_LPA'), ('NINE_TO_EIGHTEEN_LPA', 'NINE_TO_EIGHTEEN_LPA'), ('GREATER_THAN_EIGHTEEN_LPA', 'GREATER_THAN_EIGHTEEN_LPA')], max_length=256, null=True)),
                ('no_of_months_for_notice_period', models.FloatField(blank=True, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalUserWorkExperienceDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('no_of_years_experience_in_it_sector', models.FloatField(blank=True, null=True)),
                ('no_of_years_experience_in_non_it_sector', models.FloatField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user work experience details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserSSCDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('board_name_enum', models.CharField(blank=True, choices=[('CBSE', 'CBSE'), ('ICSE', 'ICSE'), ('STATE_BOARD', 'STATE_BOARD'), ('IGCSE', 'IGCSE'), ('IB', 'IB')], max_length=256, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('year_of_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user ssc details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserSocialProfileDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('profile_link', models.TextField(blank=True, null=True)),
                ('social_provider', models.CharField(blank=True, choices=[('LINKEDIN', 'LINKEDIN'), ('TWITTER', 'TWITTER')], max_length=50, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user social profile details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserProfessionalSkills',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('skill_id', models.CharField(blank=True, max_length=64, null=True)),
                ('skill_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_skill_name', models.CharField(blank=True, max_length=256, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user professional skills',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserPreferredLanguages',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('language', models.CharField(blank=True, choices=[('ENGLISH', 'ENGLISH'), ('TELUGU', 'TELUGU'), ('HINDI', 'HINDI'), ('TAMIL', 'TAMIL'), ('KANNADA', 'KANNADA'), ('MARATHI', 'MARATHI'), ('MALAYALAM', 'MALAYALAM'), ('PUNJABI', 'PUNJABI'), ('BENGALI', 'BENGALI')], max_length=128, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user preferred languages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserIntermediateDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('intermediate_course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('intermediate_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_intermediate_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('year_of_completion', models.PositiveIntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user intermediate details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserGuardianDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('relation', models.CharField(blank=True, choices=[('FATHER', 'FATHER'), ('MOTHER', 'MOTHER'), ('BROTHER', 'BROTHER'), ('SISTER', 'SISTER'), ('AUNT', 'AUNT'), ('UNCLE', 'UNCLE'), ('TEACHER', 'TEACHER'), ('SPOUSE', 'SPOUSE'), ('COUSIN', 'COUSIN'), ('OTHER', 'OTHER')], max_length=50, null=True)),
                ('other_relation', models.CharField(blank=True, max_length=256, null=True)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('have_whatsapp', models.BooleanField(blank=True, null=True)),
                ('whatsapp_mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_mobile_country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user guardian details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserDegreeDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('degree_type', models.CharField(blank=True, choices=[('BACHELORS', 'BACHELORS'), ('MASTERS', 'MASTERS')], max_length=50, null=True)),
                ('course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('completion_status', models.CharField(blank=True, choices=[('COMPLETED', 'COMPLETED'), ('PURSUING', 'PURSUING'), ('HAVE_BACKLOGS', 'HAVE_BACKLOGS'), ('DISCONTINUED', 'DISCONTINUED')], max_length=50, null=True)),
                ('department_id', models.CharField(blank=True, max_length=64, null=True)),
                ('department_name', models.CharField(blank=True, max_length=256, null=True)),
                ('score_type', models.CharField(blank=True, choices=[('CGPA', 'CGPA'), ('PERCENTAGE', 'PERCENTAGE')], max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('start_year', models.PositiveIntegerField(blank=True, null=True)),
                ('end_year', models.PositiveIntegerField(blank=True, null=True)),
                ('no_of_backlogs', models.PositiveIntegerField(blank=True, null=True)),
                ('institute_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_institute_name', models.CharField(blank=True, max_length=256, null=True)),
                ('institute_pin_code', models.CharField(blank=True, max_length=50, null=True)),
                ('institute_city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('expected_date_to_clear_backlogs', models.DateField(blank=True, null=True)),
                ('institute_district_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_district_name', models.CharField(blank=True, max_length=256, null=True)),
                ('institute_state_id', models.CharField(blank=True, max_length=64, null=True)),
                ('institute_state_name', models.CharField(blank=True, max_length=256, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user degree details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserCurrentProfessionalDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('highest_education_course_id', models.CharField(blank=True, max_length=64, null=True)),
                ('highest_education_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_course_name', models.CharField(blank=True, max_length=256, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user current professional details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserContactDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('whatsapp_mobile_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_mobile_country_code', models.CharField(blank=True, max_length=10, null=True)),
                ('i_want_to_receive_updates_directly_on_whatsapp', models.BooleanField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user contact details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserCompanyDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('company_id', models.CharField(blank=True, max_length=64, null=True)),
                ('company_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_company_name', models.CharField(blank=True, max_length=256, null=True)),
                ('company_city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('company_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('job_role_id', models.CharField(blank=True, max_length=64, null=True)),
                ('job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_job_role_name', models.CharField(blank=True, max_length=256, null=True)),
                ('is_currently_working_in_this_company', models.BooleanField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('ctc', models.CharField(blank=True, choices=[('LESS_THAN_THREE_LPA', 'LESS_THAN_THREE_LPA'), ('THREE_TO_FOUR_POINT_FIVE_LPA', 'THREE_TO_FOUR_POINT_FIVE_LPA'), ('FOUR_POINT_FIVE_TO_SIX_LPA', 'FOUR_POINT_FIVE_TO_SIX_LPA'), ('SIX_TO_NINE_LPA', 'SIX_TO_NINE_LPA'), ('NINE_TO_EIGHTEEN_LPA', 'NINE_TO_EIGHTEEN_LPA'), ('GREATER_THAN_EIGHTEEN_LPA', 'GREATER_THAN_EIGHTEEN_LPA')], max_length=256, null=True)),
                ('no_of_months_for_notice_period', models.FloatField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user company details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUserAddressDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(blank=True, editable=False)),
                ('last_update_datetime', models.DateTimeField(blank=True, editable=False)),
                ('id', models.UUIDField(db_index=True, default=ib_users.utils.generate_uuid.generate_uuid)),
                ('address_type', models.CharField(choices=[('CURRENT', 'CURRENT'), ('PERMANENT', 'PERMANENT')], max_length=50)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('address_2', models.TextField(blank=True, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=16, null=True)),
                ('city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('district_id', models.CharField(blank=True, max_length=64, null=True)),
                ('district_name', models.CharField(blank=True, max_length=256, null=True)),
                ('state_id', models.CharField(blank=True, max_length=64, null=True)),
                ('state_name', models.CharField(blank=True, max_length=256, null=True)),
                ('country_id', models.CharField(blank=True, max_length=64, null=True)),
                ('country_name', models.CharField(blank=True, max_length=256, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user_account', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user address details',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='UserSocialProfileDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('profile_link', models.TextField(blank=True, null=True)),
                ('social_provider', models.CharField(blank=True, choices=[('LINKEDIN', 'LINKEDIN'), ('TWITTER', 'TWITTER')], max_length=50, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_account', 'social_provider')},
            },
        ),
        migrations.CreateModel(
            name='UserPreferredLanguages',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('language', models.CharField(blank=True, choices=[('ENGLISH', 'ENGLISH'), ('TELUGU', 'TELUGU'), ('HINDI', 'HINDI'), ('TAMIL', 'TAMIL'), ('KANNADA', 'KANNADA'), ('MARATHI', 'MARATHI'), ('MALAYALAM', 'MALAYALAM'), ('PUNJABI', 'PUNJABI'), ('BENGALI', 'BENGALI')], max_length=128, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_account', 'language')},
            },
        ),
        migrations.CreateModel(
            name='UserAddressDetails',
            fields=[
                ('creation_datetime', models.DateTimeField(auto_now_add=True)),
                ('last_update_datetime', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=ib_users.utils.generate_uuid.generate_uuid, primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('CURRENT', 'CURRENT'), ('PERMANENT', 'PERMANENT')], max_length=50)),
                ('address_1', models.TextField(blank=True, null=True)),
                ('address_2', models.TextField(blank=True, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=16, null=True)),
                ('city_id', models.CharField(blank=True, max_length=64, null=True)),
                ('city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('other_city_name', models.CharField(blank=True, max_length=256, null=True)),
                ('district_id', models.CharField(blank=True, max_length=64, null=True)),
                ('district_name', models.CharField(blank=True, max_length=256, null=True)),
                ('state_id', models.CharField(blank=True, max_length=64, null=True)),
                ('state_name', models.CharField(blank=True, max_length=256, null=True)),
                ('country_id', models.CharField(blank=True, max_length=64, null=True)),
                ('country_name', models.CharField(blank=True, max_length=256, null=True)),
                ('user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_account', 'address_type')},
            },
        ),
    ]
