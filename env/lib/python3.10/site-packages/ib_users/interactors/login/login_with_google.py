import typing

from ib_users.interactors.login.base_login import BaseLogin
from ib_users.interactors.storages.user_login_device_details_storage import \
    UserLoginDeviceDetailsStorage
from ib_users.interactors.storages.user_social_accounts_storage import \
    UserSocialAccountsStorage
from ib_users.interactors.third_party.social_account import SocialAccount


class LoginWithGoogle(BaseLogin):
    def __init__(self,
                 storage: UserSocialAccountsStorage,
                 google_service: SocialAccount,
                 user_login_device_details_storage: UserLoginDeviceDetailsStorage):
        super().__init__(storage)
        self.google_service = google_service
        self.user_login_device_details_storage = user_login_device_details_storage

    def get_user_id_for_given_login_data(
            self, google_access_token: str, device_id: typing.Optional[str]):
        social_id = self.google_service.get_social_id(
            access_token=google_access_token)
        user_id = self.storage.get_user_id_given_google_social_id(
            social_id=social_id)
        self._validate_user_login_device_details(device_id=device_id)
        super().validate_user_account_for_active_state(user_id)
        return user_id

    def _validate_user_login_device_details(
            self, device_id: typing.Optional[str]):
        from ib_users.interactors.login.validate_user_login_device_details import \
            ValidateUserLoginDevicesDetailsInteractor

        interactor = ValidateUserLoginDevicesDetailsInteractor(
            user_login_devices_storage=self.user_login_device_details_storage)
        interactor.validate_users_login_devices(device_id=device_id)
