from django.http import HttpResponse

from ib_users.interactors.DTOs.common_dtos import PhoneNumberDTO
from ib_users.interactors.presenters.validate_phone_number_presenter import ValidatePhoneNumberPresenter
from ib_users.interactors.storages import UserAccountsStorage


class ValidatePhoneNumberInteractor:

    def __init__(self, storage: UserAccountsStorage):
        self.storage = storage

    def validate_phone_number_wrapper(
            self, phone_number_dto: PhoneNumberDTO, presenter: ValidatePhoneNumberPresenter) -> HttpResponse:

        is_valid_phone_number = self.validate_phone_number(phone_number_dto)
        response = presenter.get_validate_phone_number_response(is_valid_phone_number)

        return response

    def validate_phone_number(self, phone_number_dto: PhoneNumberDTO) -> bool:

        from ib_users.interactors.exceptions.user_credentials_exceptions import \
            AccountWithPhoneNumberDoesntExistException
        try:
            self.storage.get_user_given_phone_number(phone_number_dto)
            is_valid_phone_number = True

        except AccountWithPhoneNumberDoesntExistException:
            is_valid_phone_number = False

        return is_valid_phone_number
