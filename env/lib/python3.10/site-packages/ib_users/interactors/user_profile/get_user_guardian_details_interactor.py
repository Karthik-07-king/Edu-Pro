from ib_users.interactors.storages.user_accounts_storage import \
    UserAccountsStorage
from ib_users.interactors.storages.user_profile_storage import \
    UserProfileStorage
from ib_users.interactors.storages import dtos as storage_dtos


class GetUserGuardianDetailsInteractor:

    def __init__(self, user_account_storage: UserAccountsStorage,
                 user_profile_storage: UserProfileStorage):
        self.user_account_storage = user_account_storage
        self.user_profile_storage = user_profile_storage

    def get_user_guardian_details(
            self, user_id: str) -> storage_dtos.UserGuardianDetailsDTO:
        self._validate_user_id(user_id=user_id)

        user_guardian_details = self.user_profile_storage.get_user_guardian_details(
            user_id=user_id)
        return user_guardian_details

    def _validate_user_id(self, user_id: str):
        from ib_users.exceptions.user_account_exceptions import \
            InvalidUserIdException

        is_user_id_exists = self.user_account_storage.is_user_id_exists(
            user_id=user_id)
        if not is_user_id_exists:
            raise InvalidUserIdException()
