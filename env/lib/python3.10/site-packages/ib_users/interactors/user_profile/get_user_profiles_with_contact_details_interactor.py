import datetime
import typing

from ib_users.interfaces import dtos as interface_dtos
from ib_users.interactors.storages.user_accounts_storage import UserAccountsStorage
from ib_users.interactors.storages.user_profile_storage import UserProfileStorage
from ib_users.exceptions.user_profile_exceptions import \
    InvalidUserIdsException


class GetUserProfilesWithContactDetailsInteractor:

    def __init__(self, user_profile_storage: UserProfileStorage,
                 user_account_storage: UserAccountsStorage):
        self.user_profile_storage = user_profile_storage
        self.user_account_storage = user_account_storage

    def get_user_profiles_with_contact_details(
            self, user_ids: typing.List[str]) -> typing.List[interface_dtos.ProfileDetailsDTO]:
        from collections import defaultdict

        users_profiles = self.user_profile_storage.get_user_profiles(
            user_ids=user_ids)
        existing_user_ids = [each_user_profile.user_id for each_user_profile in users_profiles]
        invalid_user_ids = list(set(user_ids) - set(existing_user_ids))
        if invalid_user_ids:
            raise InvalidUserIdsException(user_ids=invalid_user_ids)

        users_preferred_languages_details = self.user_profile_storage. \
            get_users_preferred_languages(user_ids=user_ids)
        user_id_wise_preferred_languages = defaultdict(list)
        for each_user_preferred_language in users_preferred_languages_details:
            user_id_wise_preferred_languages[each_user_preferred_language.user_id].append(
                each_user_preferred_language.language)

        users_contact_details = self.user_profile_storage. \
            get_users_contact_details(user_ids=user_ids)
        user_id_wise_contact_details = dict()
        for user_contact_details in users_contact_details:
            user_id_wise_contact_details[user_contact_details.user_id] = user_contact_details
        user_id_wise_can_update_phone_number_details = \
            self._get_user_id_wise_user_can_update_profile_details(user_ids=user_ids)

        users_profiles_with_contact_details = []
        for user_profile_details in users_profiles:
            preferred_languages = user_id_wise_preferred_languages[user_profile_details.user_id]
            user_contact_details = user_id_wise_contact_details.get(user_profile_details.user_id)

            whatsapp_mobile_number, whatsapp_mobile_country_code, \
                i_want_to_receive_updates_in_whatsapp, have_whatsapp = None, None, None, None
            if user_contact_details:
                whatsapp_mobile_number = user_contact_details.whatsapp_mobile_number
                whatsapp_mobile_country_code = user_contact_details.whatsapp_mobile_country_code
                i_want_to_receive_updates_in_whatsapp = user_contact_details.i_want_to_receive_updates_in_whatsapp
                have_whatsapp = user_contact_details.have_whatsapp
            can_update_phone_number_details_for_user = user_id_wise_can_update_phone_number_details[
                user_profile_details.user_id]

            users_profiles_with_contact_details.append(
                interface_dtos.ProfileDetailsDTO(
                    user_id=user_profile_details.user_id,
                    first_name=user_profile_details.name,
                    last_name=user_profile_details.last_name,
                    phone_number=user_profile_details.phone_number,
                    country_code=user_profile_details.country_code,
                    whatsapp_mobile_number=whatsapp_mobile_number,
                    whatsapp_mobile_country_code=whatsapp_mobile_country_code,
                    email=user_profile_details.email,
                    date_of_birth=user_profile_details.dob,
                    gender=user_profile_details.gender,
                    preferred_languages=preferred_languages,
                    profile_pic_url=user_profile_details.profile_pic_url,
                    cover_page_url=user_profile_details.cover_page_url,
                    i_want_to_receive_updates_in_whatsapp=i_want_to_receive_updates_in_whatsapp,
                    have_whatsapp=have_whatsapp,
                    is_email_verified=user_profile_details.is_email_verified,
                    is_phone_number_verified=user_profile_details.is_phone_number_verified,
                    can_update_phone_number=can_update_phone_number_details_for_user.can_update_phone_number,
                    can_update_phone_number_after_datetime=can_update_phone_number_details_for_user.
                        can_update_phone_number_after_datetime)
            )

        return users_profiles_with_contact_details

    def _get_user_id_wise_user_can_update_profile_details(
            self, user_ids: typing.List[str]) -> typing.Dict:
        from ib_users.interactors.update_user_account_phone_number_interactor import \
            UpdateUserAccountPhoneNumberInteractor

        interactor = UpdateUserAccountPhoneNumberInteractor(
            user_account_storage=self.user_account_storage)
        users_can_update_phone_number_details = interactor.get_is_users_can_update_phone_number_details(
            user_ids=user_ids)

        user_id_wise_can_update_phone_number_details = {}
        for user_can_update_phone_number_details in users_can_update_phone_number_details:
            user_id_wise_can_update_phone_number_details[
                user_can_update_phone_number_details.user_id] = user_can_update_phone_number_details
        return user_id_wise_can_update_phone_number_details
