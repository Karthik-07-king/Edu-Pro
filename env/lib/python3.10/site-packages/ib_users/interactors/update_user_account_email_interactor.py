from ib_users.exceptions import user_account_exceptions
from ib_users.exceptions import custom_exception_constants
from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.storages.user_profile_storage import \
    UserProfileStorage
from ib_users.interactors.user_profile_interactor import UserProfileDTO
from ib_users.validators import base_validator, EmailValidator


class UpdateUserAccountEmailInteractorInteractor:
    def __init__(self, user_account_storage: UserAccountsStorage,
                 user_profile_storage: UserProfileStorage):
        self.user_account_storage = user_account_storage
        self.user_profile_storage = user_profile_storage

    def update_user_account_email(
            self, user_id: str, updated_email: str):
        EmailValidator.validate(updated_email)

        self._validate_user_account_details(user_id)

        user_account_dto = self.user_account_storage.get_user_account_details(
            user_id=user_id)
        if user_account_dto.email == updated_email:
            raise base_validator.CustomException.from_exception_message_DTO(
                custom_exception_constants.USER_NEW_EMAIL_IS_SAME_AS_EXISTING_EMAIL)
        self.user_account_storage.check_user_exists_with_email(
            email=updated_email)

        self.user_account_storage.update_email(
            email=updated_email, user_id=user_id)

        user_profile_dto = UserProfileDTO(email=updated_email)
        self.user_profile_storage.update_user_profile(
            user_id=user_id, update_profile_data=user_profile_dto
        )

    def _validate_user_account_details(self, user_id: str):

        is_user_id_exists = self.user_account_storage.is_user_id_exists(user_id)
        if not is_user_id_exists:
            raise user_account_exceptions.InvalidUserIdException()

        is_user_active = self.user_account_storage.is_user_account_active(
            user_id)
        if not is_user_active:
            raise base_validator.CustomException.from_exception_message_DTO(
                custom_exception_constants.USER_ACCOUNT_IS_DEACTIVATED)
