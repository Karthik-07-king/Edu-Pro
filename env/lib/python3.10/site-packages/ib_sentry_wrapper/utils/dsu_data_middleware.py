# from django

from django.utils.deprecation import MiddlewareMixin


def set_operation_id_scope(request):
    from sentry_sdk import configure_scope
    with configure_scope() as scope:
        from django_swagger_utils import local

        operation_id = getattr(local, 'operation_id', '')
        scope.set_tag("operation_id", operation_id)

        app_name = getattr(local, 'app_name', '')
        scope.set_tag("app_name", app_name)

        user_id = getattr(local, 'user_id', 'GUEST')
        scope.set_tag("user_id", user_id)

        client_ip_address = request.META.get('REMOTE_ADDR')
        if client_ip_address:
            scope.set_tag("client_ip_address", client_ip_address)

        user_agent = request.META.get('HTTP_USER_AGENT')
        if user_agent:
            scope.set_tag("user_agent", user_agent)

        browser_session_id = request.META.get('HTTP_X_BROWSER_SESSION_ID')
        if browser_session_id:
            scope.set_tag("browser_session_id", browser_session_id)

        app_version = request.META.get('HTTP_X_APP_VERSION')
        if app_version:
            scope.set_tag("app_version", app_version)


class DSUDataMiddleware(MiddlewareMixin):

    def process_response(self, request, response):
        set_operation_id_scope(request)
        return response

    def process_exception(self, request, exception):
        set_operation_id_scope(request)
